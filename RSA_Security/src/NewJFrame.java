import javax.swing.JOptionPane;
import java.math.BigInteger;


public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        P_Input_jTextField = new javax.swing.JTextField();
        Q_Input_jTextField = new javax.swing.JTextField();
        E_Input_jTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        TextToEncryptJTextField = new javax.swing.JTextField();
        TextToDecryptJTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        EncryptBttn = new javax.swing.JButton();
        DecryptBttn = new javax.swing.JButton();
        ClearDecryptionTextBttn = new javax.swing.JButton();
        ClearEncryptionTextBttn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        EncryptionResultJTextField = new javax.swing.JTextField();
        DecryptionResultJTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        P_Input_jTextField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        P_Input_jTextField.setMinimumSize(new java.awt.Dimension(100, 20));
        P_Input_jTextField.setPreferredSize(new java.awt.Dimension(100, 20));

        Q_Input_jTextField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Q_Input_jTextField.setMinimumSize(new java.awt.Dimension(100, 20));
        Q_Input_jTextField.setPreferredSize(new java.awt.Dimension(100, 20));

        E_Input_jTextField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        E_Input_jTextField.setMinimumSize(new java.awt.Dimension(100, 20));
        E_Input_jTextField.setPreferredSize(new java.awt.Dimension(100, 20));

        jLabel1.setText("P");

        jLabel2.setText("Q");

        jLabel3.setText("E");

        TextToEncryptJTextField.setMinimumSize(new java.awt.Dimension(300, 22));
        TextToEncryptJTextField.setPreferredSize(new java.awt.Dimension(300, 22));

        TextToDecryptJTextField.setAutoscrolls(false);
        TextToDecryptJTextField.setMinimumSize(new java.awt.Dimension(300, 22));
        TextToDecryptJTextField.setPreferredSize(new java.awt.Dimension(300, 22));
        TextToDecryptJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextToDecryptJTextFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Text to encrypt");

        jLabel5.setText("Text to decrypt");

        EncryptBttn.setText("Encrypt");
        EncryptBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EncryptBttnActionPerformed(evt);
            }
        });

        DecryptBttn.setText("Decrypt");
        DecryptBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecryptBttnActionPerformed(evt);
            }
        });

        ClearDecryptionTextBttn.setText("Clear decryption text");
        ClearDecryptionTextBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearDecryptionTextBttnActionPerformed(evt);
            }
        });

        ClearEncryptionTextBttn.setText("Clear encryption text");
        ClearEncryptionTextBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearEncryptionTextBttnActionPerformed(evt);
            }
        });

        jLabel8.setText("Encrypted text: ");

        jLabel9.setText("Decrypted text: ");

        DecryptionResultJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecryptionResultJTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Q_Input_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(P_Input_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(TextToEncryptJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(EncryptionResultJTextField))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(TextToDecryptJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(E_Input_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(48, 48, 48)
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(DecryptionResultJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(jLabel5)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EncryptBttn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ClearEncryptionTextBttn, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                    .addComponent(ClearDecryptionTextBttn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DecryptBttn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(9, 9, 9))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(P_Input_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextToEncryptJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ClearEncryptionTextBttn))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Q_Input_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(16, 16, 16))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(EncryptionResultJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(EncryptBttn)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextToDecryptJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ClearDecryptionTextBttn))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(E_Input_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(DecryptionResultJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(DecryptBttn)))
                .addGap(75, 75, 75))
        );

        P_Input_jTextField.getAccessibleContext().setAccessibleName("p_value");
        Q_Input_jTextField.getAccessibleContext().setAccessibleName("q_value");
        E_Input_jTextField.getAccessibleContext().setAccessibleName("e_value");
        TextToEncryptJTextField.getAccessibleContext().setAccessibleName("encrypt_text");
        TextToDecryptJTextField.getAccessibleContext().setAccessibleName("decrypt_text");
        EncryptBttn.getAccessibleContext().setAccessibleName("EncryptBttn");

        pack();
    }// </editor-fold>                        

    private void TextToDecryptJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                        
        // TODO add your handling code here:
    }                                                       

    private void EncryptBttnActionPerformed(java.awt.event.ActionEvent evt) {                                            
        RSA.setP(new BigInteger(P_Input_jTextField.getText()));
        if(!RSA.getValid()) {
    		return;
        }
        RSA.setQ(new BigInteger(Q_Input_jTextField.getText()));
        if(!RSA.getValid()) {
        	return;
        }
        
        RSA.generateKeys(E_Input_jTextField.getText());
        
        if(!RSA.getValid()) {
        	return;
        }
        
        
        String input = TextToEncryptJTextField.getText().toString();
        System.out.println("Value to Encrypt: " + input);
        String result = String.valueOf(RSA.encrypt(input));
        System.out.println("Encrypted Value: " + result);
        EncryptionResultJTextField.setText(result);
    }                                           

    private void DecryptBttnActionPerformed(java.awt.event.ActionEvent evt) {                                            
    	RSA.setP(new BigInteger(P_Input_jTextField.getText()));
    	if(!RSA.getValid()) {
    		return;
        }
    	RSA.setQ(new BigInteger(Q_Input_jTextField.getText()));
        if(!RSA.getValid()) {
        	return;
        }
        
        RSA.generateKeys(E_Input_jTextField.getText());
        
        if(!RSA.getValid()) {
        	return;
        }
        
       
        String input = TextToDecryptJTextField.getText();
        System.out.println("Value to Decrypt: " + input);
        String result = RSA.decrypt(input);
        System.out.println("Decrypted Value: " + result);
        DecryptionResultJTextField.setText(result);
        System.out.println("decryption key(private key): "+RSA.getD());
    }                                           

    private void ClearDecryptionTextBttnActionPerformed(java.awt.event.ActionEvent evt) {                                                        
    	TextToDecryptJTextField.setText("");
    	DecryptionResultJTextField.setText("");
    }                                                       

    private void ClearEncryptionTextBttnActionPerformed(java.awt.event.ActionEvent evt) {                                                        
    	TextToEncryptJTextField.setText("");
    	EncryptionResultJTextField.setText("");
    }                                                       

    private void DecryptionResultJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                           
        // TODO add your handling code here:
    }                                                          

    
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton ClearDecryptionTextBttn;
    private javax.swing.JButton ClearEncryptionTextBttn;
    private javax.swing.JButton DecryptBttn;
    private javax.swing.JTextField DecryptionResultJTextField;
    private javax.swing.JTextField E_Input_jTextField;
    private javax.swing.JButton EncryptBttn;
    private javax.swing.JTextField EncryptionResultJTextField;
    private javax.swing.JTextField P_Input_jTextField;
    private javax.swing.JTextField Q_Input_jTextField;
    private javax.swing.JTextField TextToDecryptJTextField;
    private javax.swing.JTextField TextToEncryptJTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration                   
}
